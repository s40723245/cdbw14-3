var tipuesearch = {"pages": [{'title': 'About', 'text': 'github: https://github.com/mdecourse/cdbw14-3.git \xa0 \n', 'tags': '', 'url': 'About.html'}, {'title': 'group1', 'text': '', 'tags': '', 'url': 'group1.html'}, {'title': '40723229', 'text': 'website: https://s40723229.github.io/cd2020/content/index.html \n github: https://github.com/s40723229/cd2020 \n 網站用戶gm用戶登入設置 \n 1.搜尋google api 切換成自己的學校gm帳號 \n 2.同意使用說明並建立專案(名稱自取) \n 3.git clone老師的cd2020pj1倉儲放到隨身系統的tmp中 \n 4.啟用api和服務，選定Google+Domains API \n 5.設定憑證，選內部更改應用程式名稱(名稱自取 ) \n 6.在憑證建立憑證選取"建立OAuth客戶端ID"，選擇應用程式的選項 \n 7.建立後會有客戶ID和密碼，複製成文字檔存在tmp下 \n 設定\xa0 \xa0授權的 javascript 來源； https://localhost:8443 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0授權的重新導向url: https://localhost:8443/login/google/ \n 8.用leo開啟cd2020pj1 修改路徑 ，儲存後點darwROC \n config內的keyfile的檔案名稱改成自己剛儲存的文字檔 \n 9.執行 pip install authomatic 到cd2020pj1執行 python wsgi.py\xa0 \n 10.登入學校google帳號就可進入網站 \n \n', 'tags': '', 'url': '40723229.html'}, {'title': '40723201', 'text': '\n website: https://s40723201.github.io/cd2020/content/index.html \n github: https://github.com/s40723201/cd2020 \n ubuntu設置 \n 操作步驟： \n \n 下載\xa0 vitualbox 、 ubuntu 、 CoppeliaSim \xa0 四輪車控制器檔案。 \n 開啟vitualbox，匯入ubuntu。 \n 設定➜網路➜附加到(A)：僅限主機介面卡 \n 啟動ubuntu。 \n 輸入密碼kmol2020，並開啟 LXTerminal。 \n 輸入xterm&。 \n cd coppeliasim4_rev4 ➜ ls ➜ cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04➜ ls ➜ ./coppeliaSim.sh。 \n \n \n', 'tags': '', 'url': '40723201.html'}, {'title': '40723246', 'text': 'website: https://s40723246.github.io/cd2020/content/index.html \n github: https://github.com/ \n IPV6下伺服器連線設定 \n 1. 先設定好網路連線下的host ip( https://github.com/mdecourse/cd2020/blob/master/downloads/w13_ipv6_assignment.txt ) \n \n 2.設定網路的 ipv6 位置設定 \n 3.進入 linux 虛擬主機，依照指令輸入 cd tmp>cd cd2020pj1>git pull >cd docs> cd cmsimde \n 4.輸入 vi wsgi.py \xa0 並且更改 host \n 5.設定好 putty \n 6.按下 save 並且 open 後，在 putty 頁面分別輸入兩次密碼 kmol2020 \n 7.開啟 Xming， 接著輸入 xterm& \n 8.在開啟的視窗中輸入 cd tmp>cd 2020pj1>cd docs>cd cmsimde>python3 wsgi.py \n 用 google 輸入網址 https://[2001:288:6004:17:2020:7221]:17443\xa0 ( 必須要用自己的 ip) \n 9.一開始無法登陸，必須要關閉 proxy ，並且重新整理該頁面就可以了 \n \n \n \n', 'tags': '', 'url': '40723246.html'}, {'title': 'group2', 'text': '', 'tags': '', 'url': 'group2.html'}, {'title': '40732331', 'text': 'website \n github \n', 'tags': '', 'url': '40732331.html'}, {'title': '40723243', 'text': 'website: https://s40723243.github.io/cd2020/content/index.html \n github: https://github.com/s40723243/cd2020 \n Vrep虛擬主機設置 \n 1.先下載VirtualBoxrtualBox跟Ubuntu \n 2.將Ubuntu匯入 \n 3.設定網路 Host-Only -Only 啟動Ubuntu主機 \n 4.輸入密碼kmol2020登入，開啟LXTermial \n 5.輸入xterm& \n 6.用ls來顯示，在用cd進入資料夾內 \n 7.輸入./coppeliaSim.sh來開啟Vrep \n \n IPv6遠端控制 \n 1.剛開始先設定好IPV6的內容 \n 2.在喜好設定設定IPV6的參數 \n 3.啟動virtualbox虛擬主機\xa0 輸入密碼 kmol2020 \n 4.cd tmp ->cd cd2020pj1 ->git pull -> ls ->cd docs -> cd cmsimde -> vi wsgi.py \n 5.更改host變成自己的IP位置 \n 6.打開putty輸入想要連線的IP並設定 \n 7.open連到該主機 \n 8.輸入帳號密碼kmol2020 \n 9.使用XLaunch來開啟 \n 10.輸入xterm& \n', 'tags': '', 'url': '40723243.html'}, {'title': '40723228', 'text': 'website: https://s40723228.github.io/cd2020/content/index.html \n github: https://github.com/s40723228/cd2020 \n \n', 'tags': '', 'url': '40723228.html'}, {'title': 'group3', 'text': '', 'tags': '', 'url': 'group3.html'}, {'title': '40723247', 'text': 'website : https://s40723247.github.io/cd2020/content/About.html \n github:\xa0 https://github.com/s40723247/cd2020 \n Bridged IPv6 遠端控制設定 \n 1.首先設定IPV6的內容 \n 2.在喜好設定設定IPV6參數 \n 3.啟動虛擬主機 輸入密碼 \n 4.cd tmp ->cd cd2020pj1 ->git pull -> ls ->cd docs -> cd cmsimde -> vi wsgi.py \n 5.更改host成自己主機IP \n 6.打開putty輸入想要連線的IP並設定 \n 7.OPEN \n 8.輸入帳號密碼kmol2020 \n 9.打開XLaunch \n 10.輸入xterm& \n 11.cd tmp ->cd cd2020pj1 ->git pull -> ls ->cd docs -> cd cmsimde -> vi wsgi.py 即可 \n \n \n', 'tags': '', 'url': '40723247.html'}, {'title': '40739214', 'text': 'website： https://s40739214.github.io/cd2020/content/ \n github： https://github.com/s40739214/cd2020 \n IPv4 Ubuntu對外連線設定操作 \n 1. 點選檔案→喜好設定→網路→新增一個新的 NAT 網路 \n 2. 編輯 NAT 網路→點選連接埠轉送→新增 4 個新的連接埠轉送埠號 \n 3. 設定 \n 主機 IP ： 127.0.0.1 \n 客體 IP ： 10.0.2.15 \n 主機連接埠： 22 、 19999 、 17443 、 18443 \n 客體連接埠： 22 、 19999 、 7443 、 8443 \n 4. 點選設定→網路→設定主機網路為 NAT Network \n 5. 設定完後，點選啟動，接著輸入密碼 kmol2020 \n 6. 開啟 LXTermial ，輸入 ifconfig →輸入 sudo apt install net-tools →輸入密碼 kmol2020 \n 7.cd tmp->ls-> 輸入 ping 127.0.0.1 測試→ cd cd2020pj1 → git pull \n 8. 輸入 sudo vi wsgi.py 編輯內容，按 i 進行編輯 \n 9. 將近端的 host 改為 10.0.2.4 ，接著按 Esc 並輸入 :wq 存儲 \n 10. 開啟 leo ，並開啟 cd2020pj1.leo ，點選 Nav 搜尋 allowExt \n 11. 點選 @edituploadform.js ，並將第 26 行新增一個 ttt 檔，完成後存儲並關閉 leo \n 12.cd.., 接著在 tmp 下新增 oauth_scrum.txt ，輸入 sudo vi oauth_scrum.txt \n 13. 按 i 編輯，內容先隨便輸入，接著按 Esc 並輸入 :wq 存儲 \n 14.cd cd2020pj1 ，並輸入 python3 wsgi.py 啟動 \n 15. 網址為 https:/127.0.0.1:18443/alogin \n 16. 帳號及密碼都為 admin ，進入後點選 fileuploadform ，點選要上傳的 ttt 檔 \n 17. 點選 download list 檢查檔案是否上傳完成 \n \n \n', 'tags': '', 'url': '40739214.html'}, {'title': '40723239', 'text': 'website\xa0 https://s40723239.github.io/cd2020/content/week10~14.html \n github\xa0  \xa0https://github.com/s40723239/cd2020.git \n ipv6 對外連線 \n \n \n', 'tags': '', 'url': '40723239.html'}, {'title': 'group4', 'text': '', 'tags': '', 'url': 'group4.html'}, {'title': '40723245', 'text': 'website \n github \n', 'tags': '', 'url': '40723245.html'}, {'title': '40723238', 'text': 'website \n github \n \n \n \n', 'tags': '', 'url': '40723238.html'}, {'title': '40723212', 'text': 'website\xa0 https://s40723212.github.io/cd2020/content/index.html \n github\xa0 https://github.com/s40723212/cd2020 \n \n 分組協同倉儲中的cmsimde無檔案 \n \n 解決方法 \n 依序輸入git submodule init\xa0 \xa0 -\xa0 \xa0 git\xa0 sumodule update這兩個指令即可解決 \n \n 影片操作 \n \n \n \n', 'tags': '', 'url': '40723212.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};